basePath: /api
definitions:
  auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  branch.CreateBranch:
    properties:
      code:
        type: string
      name:
        type: string
    required:
    - code
    - name
    type: object
  branch.UpdateBranch:
    properties:
      code:
        type: string
      name:
        type: string
    required:
    - code
    - name
    type: object
  buildingtype.CreateBuildingTypeRequest:
    properties:
      code:
        type: string
      name:
        type: string
      rate:
        type: number
    required:
    - code
    - name
    - rate
    type: object
  buildingtype.UpdateBuildingTypeRequest:
    properties:
      code:
        type: string
      name:
        type: string
      rate:
        type: number
    required:
    - code
    - name
    - rate
    type: object
  fireproduct.CreateFireProductRequest:
    properties:
      address:
        type: string
      building_type_id:
        type: integer
      city:
        type: string
      construction:
        type: integer
      district:
        type: string
      is_earthquake:
        type: boolean
      period:
        type: integer
      price:
        type: number
      province:
        type: string
      user_id:
        type: integer
    required:
    - address
    - building_type_id
    - city
    - construction
    - district
    - period
    - price
    - province
    type: object
  invoice.CreateInvoiceRequest:
    properties:
      fire_product_id:
        type: integer
      insured_price:
        type: number
      period:
        type: integer
      premium_base:
        type: number
      premium_rate:
        type: number
      total:
        type: number
      transaction_fee:
        type: number
    required:
    - fire_product_id
    - insured_price
    - period
    - premium_base
    - premium_rate
    - total
    - transaction_fee
    type: object
  policy.CreatePolicyRequest:
    properties:
      invoice_code:
        type: string
    required:
    - invoice_code
    type: object
  responses.ErrorMessage:
    properties:
      error:
        type: boolean
      message:
        type: string
      statusCode:
        type: integer
    type: object
  responses.Response:
    properties:
      data: {}
      message:
        type: string
      statusCode:
        type: integer
    type: object
  responses.Token:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFwdXRyYWRld2FudGFyYUBnbWFpbC5jb20iLCJ1c2VybmFtZSI6ImFsaWZkd3QiLCJhZ2UiOjI0LCJpc3MiOiIxNzEwODY5NTgzIiwic3ViIjoiMiIsImV4cCI6MTcxMDg3MTM4MywiaWF0IjoxNzEwODY5NTgzLCJqdGkiOiI3OTQzZDc0Ny04Mzk1LTRlMzktYmZmYS1iM2RiODM0ZGZjNmEifQ.Ngh-kJiAh3_nEmaWP5emX2iZSTF-4IAykH6VC9szyxY
        type: string
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFwdXRyYWRld2FudGFyYUBnbWFpbC5jb20iLCJ1c2VybmFtZSI6ImFsaWZkd3QiLCJhZ2UiOjI0LCJpc3MiOiIxNzEwODY5NTgzIiwic3ViIjoiMiIsImV4cCI6MTcxMDg3MTM4MywiaWF0IjoxNzEwODY5NTgzLCJqdGkiOiI3OTQzZDc0Ny04Mzk1LTRlMzktYmZmYS1iM2RiODM0ZGZjNmEifQ.Ngh-kJiAh3_nEmaWP5emX2iZSTF-4IAykH6VC9szyxY
        type: string
    type: object
  user.UpdateUserByUsernameRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
    required:
    - email
    - full_name
    type: object
host: localhost:8080
info:
  contact:
    email: aputradewantara@gmail.com
    name: Alif Dewantara
    url: https://github.com/alifdwt
  title: Bsp Technical Test Backend
  version: "1.0"
paths:
  /auth/hello:
    get:
      description: Return a greeting message to the user
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Greet the user
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: Login Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      summary: Login a user
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - multipart/form-data
      description: Create a new user
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Full Name
        in: formData
        name: full_name
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Birth Date
        in: formData
        name: birth_date
        required: true
        type: string
      - description: Profile Image
        in: formData
        name: profile_image
        required: true
        type: file
      - description: Admin Code
        in: formData
        name: admin_code
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      summary: Register a new user
      tags:
      - Auth
  /branch:
    get:
      consumes:
      - application/json
      description: Get all branches
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all branches
      tags:
      - Branch
    post:
      consumes:
      - application/json
      description: Create a branch
      parameters:
      - description: Branch data
        in: body
        name: branch
        required: true
        schema:
          $ref: '#/definitions/branch.CreateBranch'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create a branch
      tags:
      - Branch
  /branch/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a branch
      parameters:
      - description: Branch ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete a branch
      tags:
      - Branch
    get:
      consumes:
      - application/json
      description: Get branch by ID
      parameters:
      - description: Branch ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get branch by ID
      tags:
      - Branch
    put:
      consumes:
      - application/json
      description: Update a branch
      parameters:
      - description: Branch ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Branch Request
        in: body
        name: branch
        required: true
        schema:
          $ref: '#/definitions/branch.UpdateBranch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update a branch
      tags:
      - Branch
  /branch/hello:
    get:
      description: Return a greeting message to the user
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Greet the user
      tags:
      - Branch
  /buildingtype:
    get:
      consumes:
      - application/json
      description: Get all building types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all building types
      tags:
      - BuildingType
    post:
      consumes:
      - application/json
      description: Create a new building type
      parameters:
      - description: Create Building Type Request
        in: body
        name: buildingtype
        required: true
        schema:
          $ref: '#/definitions/buildingtype.CreateBuildingTypeRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create a new building type
      tags:
      - BuildingType
  /buildingtype/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a building type
      parameters:
      - description: Building Type ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete a building type
      tags:
      - BuildingType
    get:
      consumes:
      - application/json
      description: Get building type by id
      parameters:
      - description: Building Type ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get building type by id
      tags:
      - BuildingType
    put:
      consumes:
      - application/json
      description: Update a building type
      parameters:
      - description: Building Type ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Building Type Request
        in: body
        name: buildingtype
        required: true
        schema:
          $ref: '#/definitions/buildingtype.UpdateBuildingTypeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update a building type
      tags:
      - BuildingType
  /buildingtype/hello:
    get:
      description: Return a greeting message to the user
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Greet the user
      tags:
      - BuildingType
  /invoice:
    get:
      consumes:
      - application/json
      description: Get all invoices
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all invoices
      tags:
      - Invoice
    post:
      consumes:
      - application/json
      description: Create an invoice
      parameters:
      - description: Create Invoice Request
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/invoice.CreateInvoiceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create an invoice
      tags:
      - Invoice
  /invoice/{code}:
    get:
      consumes:
      - application/json
      description: Get an invoice by Code
      parameters:
      - description: Invoice Code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get an invoice by Code
      tags:
      - Invoice
  /invoice/hello:
    get:
      description: Return a greeting message to the user
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Greet the user
      tags:
      - Invoice
  /invoice/next-code:
    get:
      consumes:
      - application/json
      description: Get next invoice code
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get next invoice code
      tags:
      - Invoice
  /policy:
    post:
      consumes:
      - application/json
      description: Create a new policy
      parameters:
      - description: Policy data
        in: body
        name: policy
        required: true
        schema:
          $ref: '#/definitions/policy.CreatePolicyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create a new policy
      tags:
      - Policy
  /policy/{code}:
    delete:
      consumes:
      - application/json
      description: Delete a policy
      parameters:
      - description: Policy code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete a policy
      tags:
      - Policy
  /policy/hello:
    get:
      description: Return a greeting message to the user
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Greet the user
      tags:
      - Policy
  /product/fire:
    get:
      consumes:
      - application/json
      description: Get all fire products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all fire products
      tags:
      - FireProduct
    post:
      consumes:
      - application/json
      description: Create a new fire product
      parameters:
      - description: Create Fire Product Request
        in: body
        name: fireproduct
        required: true
        schema:
          $ref: '#/definitions/fireproduct.CreateFireProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create a new fire product
      tags:
      - FireProduct
  /product/fire/{id}:
    delete:
      consumes:
      - application/json
      description: Delete fire product by id
      parameters:
      - description: Fire Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Delete fire product by id
      tags:
      - FireProduct
    get:
      consumes:
      - application/json
      description: Get fire product by id
      parameters:
      - description: Fire Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get fire product by id
      tags:
      - FireProduct
  /product/fire/hello:
    get:
      description: Return a greeting message to the user
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Greet the user
      tags:
      - FireProduct
  /user:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all users
      tags:
      - User
  /user/{id}:
    put:
      consumes:
      - multipart/form-data
      description: Update user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Full Name
        in: formData
        name: full_name
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Birth Date
        in: formData
        name: birth_date
        required: true
        type: string
      - description: Profile Image
        in: formData
        name: profile_image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update user by id
      tags:
      - User
  /user/{username}:
    get:
      consumes:
      - application/json
      description: Get user by username
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get user by username
      tags:
      - User
  /user/hello:
    get:
      description: Return a greeting message to the user
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Greet the user
      tags:
      - User
  /user/username/{username}:
    put:
      consumes:
      - application/json
      description: Update user by username
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      - description: Update User By Username Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserByUsernameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Update user by username
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: Header
    name: Authorization
    type: apiKey
swagger: "2.0"
